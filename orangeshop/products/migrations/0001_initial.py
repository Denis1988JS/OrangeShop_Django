# Generated by Django 4.2.7 on 2024-01-25 10:30

from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AdvantagesProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Преимущество товара')),
                ('description', models.TextField(max_length=500, unique=True, verbose_name='Описание преимущества товара')),
            ],
            options={
                'verbose_name': 'Преимущество товара',
                'verbose_name_plural': 'Преимущества товаров',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Название категории')),
                ('slug', models.SlugField(unique=True, verbose_name='URL-категории')),
                ('image', models.ImageField(upload_to='Categoty/', verbose_name='Фото категории')),
                ('description', models.TextField(max_length=2000, unique=True, verbose_name='Описание категории')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='products.category')),
            ],
            options={
                'verbose_name': 'Категория товара',
                'verbose_name_plural': 'Категории товаров',
            },
        ),
        migrations.CreateModel(
            name='Characteristics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, unique=True, verbose_name='Характеристика')),
                ('description', models.TextField(max_length=500, unique=True, verbose_name='Описание характеристики')),
                ('image', models.ImageField(upload_to='Characteristics/', verbose_name='Характеристика фото')),
            ],
            options={
                'verbose_name': 'Характеристика товара',
                'verbose_name_plural': 'Характеристики товаров',
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Название колекции')),
                ('description', models.TextField(max_length=500, verbose_name='Описание колекции')),
                ('slug', models.SlugField(unique=True, verbose_name='URL-коллекции')),
                ('year', models.CharField(max_length=4, verbose_name='Год выпуска коллекции')),
                ('image', models.ImageField(upload_to='Collection/', verbose_name='Фото коллекции')),
            ],
            options={
                'verbose_name': 'Коллекция товара',
                'verbose_name_plural': 'Коллекция товаров',
            },
        ),
        migrations.CreateModel(
            name='ColorProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=20, unique=True, verbose_name='Название цвета')),
                ('img_color', models.ImageField(upload_to='ColorProduct/', verbose_name='Фото')),
            ],
            options={
                'verbose_name': 'Цвет товара',
                'verbose_name_plural': 'Цвет товаров',
            },
        ),
        migrations.CreateModel(
            name='EquipmentProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Комплектация')),
                ('description', models.TextField(max_length=200, verbose_name='Описание комплектации')),
            ],
            options={
                'verbose_name': 'Комплектация товара',
                'verbose_name_plural': 'Комплектация товаров',
            },
        ),
        migrations.CreateModel(
            name='EquipmentProductInstance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipment', to='products.equipmentproduct', verbose_name='Комплектация')),
            ],
            options={
                'verbose_name': 'Экземпляр комплектации товара',
                'verbose_name_plural': 'Экземпляры комплектации товаров',
            },
        ),
        migrations.CreateModel(
            name='EquipmentProductSeparately',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(help_text='Указать либо приобретать отдельно либо кол-во', max_length=50, verbose_name='Характеристика комплектации')),
            ],
            options={
                'verbose_name': 'Статус комплектации',
                'verbose_name_plural': 'Статус комплектации',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название товара')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='URL-товара')),
                ('short_description', models.TextField(max_length=500, unique=True, verbose_name='Краткое описание товара')),
                ('description', models.TextField(max_length=1000, unique=True, verbose_name='Полное описание товара')),
                ('promo', models.BooleanField(default=False, verbose_name='Акционный товар')),
                ('image', models.ImageField(upload_to='Product/', verbose_name='Главное фото товара')),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=7, verbose_name='Цена')),
                ('discount', models.DecimalField(decimal_places=2, default=0.0, max_digits=4, verbose_name='Скидка в %')),
                ('quantity', models.PositiveIntegerField(default=0, verbose_name='Остаток')),
                ('time_create', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания товара')),
                ('time_update', models.DateTimeField(auto_now=True, verbose_name='Дата обновления товара')),
                ('connectionDiagram', models.ImageField(upload_to='connectionDiagram/', verbose_name='Схема подключения или монтажа')),
                ('advantages', models.ManyToManyField(related_name='advantages', to='products.advantagesproduct', verbose_name='Преимущества товара')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.category', verbose_name='Категория')),
                ('characteristics', models.ManyToManyField(related_name='characteristics', to='products.characteristics', verbose_name='Характеристики товара')),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.collection', verbose_name='Коллекция')),
                ('color', models.ManyToManyField(related_name='color', to='products.colorproduct', verbose_name='Цвет товара')),
                ('equipment', models.ManyToManyField(related_name='equipment', to='products.equipmentproductinstance', verbose_name='Комплектация товара')),
            ],
        ),
        migrations.AddField(
            model_name='equipmentproductinstance',
            name='value',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='separately', to='products.equipmentproductseparately', verbose_name='Характеристика'),
        ),
    ]
